spring:
  application:
    name: dawasure-backend

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:development}

  # Database Configuration
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:dawasure_db}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 300000
      max-lifetime: 900000

  # JPA Configuration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update}
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          time_zone: UTC

  # MongoDB Configuration (Optional - for search analytics)
  # Commented out to make it optional for now
  # data:
  #   mongodb:
  #     uri: ${MONGODB_URI:mongodb://localhost:27017/dawasure_mongo}
  #     auto-index-creation: true
  
  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      jedis:
          pool:
            max-active: 8
            max-idle: 8
            min-idle: 0
            max-wait: -1ms

  # Redis Configuration


  # Mail Configuration
  mail:
    host: ${SMTP_HOST:smtp.gmail.com}
    port: ${SMTP_PORT:587}
    username: ${SMTP_USER:}
    password: ${SMTP_PASS:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      write-date-keys-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
    time-zone: UTC

  # Servlet Configuration
  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE:5MB}
      max-request-size: ${MAX_REQUEST_SIZE:10MB}

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api/v1
  error:
    include-stacktrace: on_param
    include-message: always

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:your_super_secure_jwt_secret_key_here_must_be_256_bits_long_for_hmac_sha256}
  access-expiry: ${JWT_ACCESS_EXPIRY:900000}  # 15 minutes in ms
  refresh-expiry: ${JWT_REFRESH_EXPIRY:2592000000}  # 30 days in ms
  issuer: dawasure-api
  audience: dawasure-client

# External Services Configuration
twilio:
  account-sid: ${TWILIO_ACCOUNT_SID:}
  auth-token: ${TWILIO_AUTH_TOKEN:}
  phone-number: ${TWILIO_PHONE_NUMBER:}

razorpay:
  key-id: ${RAZORPAY_KEY_ID:}
  key-secret: ${RAZORPAY_KEY_SECRET:}

# File Upload Configuration
upload:
  directory: ${UPLOAD_DIR:uploads/}
  max-size: ${MAX_FILE_SIZE:5242880}

# Security Configuration
security:
  cors:
    allowed-origins:
      - ${FRONTEND_URL:http://localhost:3000}
      - ${ADMIN_PANEL_URL:http://localhost:3001}
      - http://localhost:3000
      - http://localhost:3001
    allowed-methods: GET,POST,PUT,DELETE,PATCH,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
  rate-limit:
    enabled: true
    requests-per-hour: ${RATE_LIMIT_MAX_REQUESTS:1000}

# Cache Configuration
cache:
  redis:
    ttl:
      short: 300     # 5 minutes
      medium: 1800   # 30 minutes
      long: 3600     # 1 hour
      otp: 300       # 5 minutes

# Business Configuration
business:
  delivery:
    standard-charges: 2000  # ₹20 in paise
    express-charges: 5000   # ₹50 in paise
    free-delivery-threshold: 50000  # ₹500 in paise
  service:
    fee-percentage: 2.0     # 2%
  tax:
    gst-percentage: 5.0     # 5% GST

# Logging Configuration
logging:
  level:
    com.dawasure: ${LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:WARN}
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: ${SQL_PARAM_LOG_LEVEL:WARN}
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
  health:
    redis:
      enabled: true
    db:
      enabled: true
    mail:
      enabled: false